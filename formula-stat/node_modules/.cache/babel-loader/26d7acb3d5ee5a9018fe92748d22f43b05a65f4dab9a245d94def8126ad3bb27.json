{"ast":null,"code":"import _defineProperty from \"/Users/conor/Development/Vue Projects/FormulaStat/formula-stat/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default class Driver {\n  constructor(position, points, wins, id, number, lastName, nationality, totalrounds, constructorid, constructorname) {\n    _defineProperty(this, \"position\", void 0);\n    _defineProperty(this, \"points\", void 0);\n    _defineProperty(this, \"wins\", void 0);\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"number\", void 0);\n    _defineProperty(this, \"lastName\", void 0);\n    _defineProperty(this, \"nationality\", void 0);\n    _defineProperty(this, \"constructorid\", void 0);\n    _defineProperty(this, \"constructorname\", void 0);\n    this.position = position;\n    this.points = points;\n    this.wins = wins;\n    this.id = id;\n    this.number = number;\n    this.lastName = lastName;\n    this.nationality = nationality;\n    this.totalrounds = totalrounds;\n    this.constructorid = constructorid;\n    this.constructorname = constructorname;\n  }\n  static retrieveDrivers(year, round) {\n    var drivers = [];\n    var xmlHttp = new XMLHttpRequest();\n    var yearString = year?.toString() || \"2022\";\n    var roundString = round?.toString() || \"22\";\n    console.log(\"http://localhost:3333/standings\" + yearString + \"-\" + roundString);\n    xmlHttp.open(\"GET\", \"http://localhost:3333/standings\" + yearString + \"-\" + roundString, false); // false for synchronous request\n    xmlHttp.send(null);\n    const obj = JSON.parse(xmlHttp.responseText);\n    obj.forEach(e => {\n      const newDriver = new Driver(e.position, e.points, e.wins, e.drivercode, e.number, e.name, e.nationality, e.totalrounds, e.constructorid, e.constructorname);\n      drivers.push(newDriver);\n    });\n    return drivers;\n  }\n}","map":{"version":3,"names":["Driver","constructor","position","points","wins","id","number","lastName","nationality","totalrounds","constructorid","constructorname","retrieveDrivers","year","round","drivers","xmlHttp","XMLHttpRequest","yearString","toString","roundString","console","log","open","send","obj","JSON","parse","responseText","forEach","e","newDriver","drivercode","name","push"],"sources":["/Users/conor/Development/Vue Projects/FormulaStat/formula-stat/src/js/Driver.js"],"sourcesContent":["export default class Driver {\n\n    position;\n    points;\n    wins;\n    id;\n    number;\n    lastName;\n    nationality;\n    constructorid;\n    constructorname;\n\n    constructor(position, points, wins, id, number, lastName, nationality, totalrounds, constructorid, constructorname) {\n        this.position = position;\n        this.points = points;\n        this.wins = wins;\n        this.id = id;\n        this.number = number;\n        this.lastName = lastName;\n        this.nationality = nationality;\n        this.totalrounds = totalrounds;\n        this.constructorid = constructorid;\n        this.constructorname = constructorname;\n    }\n\n\n    static retrieveDrivers(year, round) {\n\n        var drivers = [];\n\n        var xmlHttp = new XMLHttpRequest();\n\n        var yearString = year?.toString() || \"2022\"\n        var roundString = round?.toString() || \"22\"\n\n        console.log(\"http://localhost:3333/standings\" + yearString + \"-\" + roundString)\n        xmlHttp.open( \"GET\", \"http://localhost:3333/standings\" + yearString + \"-\" + roundString, false ); // false for synchronous request\n        xmlHttp.send( null );\n\n        const obj = JSON.parse(xmlHttp.responseText);\n\n        obj.forEach(e => {\n            const newDriver = new Driver(e.position, e.points, e.wins, e.drivercode, e.number, e.name, e.nationality, e.totalrounds, e.constructorid, e.constructorname)\n            drivers.push(newDriver);\n        });\n\n        return drivers;\n    }\n}"],"mappings":";;AAAA,eAAe,MAAMA,MAAM,CAAC;EAYxBC,WAAW,CAACC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,EAAEC,aAAa,EAAEC,eAAe,EAAE;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAChH,IAAI,CAACT,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,eAAe,GAAGA,eAAe;EAC1C;EAGA,OAAOC,eAAe,CAACC,IAAI,EAAEC,KAAK,EAAE;IAEhC,IAAIC,OAAO,GAAG,EAAE;IAEhB,IAAIC,OAAO,GAAG,IAAIC,cAAc,EAAE;IAElC,IAAIC,UAAU,GAAGL,IAAI,EAAEM,QAAQ,EAAE,IAAI,MAAM;IAC3C,IAAIC,WAAW,GAAGN,KAAK,EAAEK,QAAQ,EAAE,IAAI,IAAI;IAE3CE,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGJ,UAAU,GAAG,GAAG,GAAGE,WAAW,CAAC;IAC/EJ,OAAO,CAACO,IAAI,CAAE,KAAK,EAAE,iCAAiC,GAAGL,UAAU,GAAG,GAAG,GAAGE,WAAW,EAAE,KAAK,CAAE,CAAC,CAAC;IAClGJ,OAAO,CAACQ,IAAI,CAAE,IAAI,CAAE;IAEpB,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACX,OAAO,CAACY,YAAY,CAAC;IAE5CH,GAAG,CAACI,OAAO,CAACC,CAAC,IAAI;MACb,MAAMC,SAAS,GAAG,IAAI/B,MAAM,CAAC8B,CAAC,CAAC5B,QAAQ,EAAE4B,CAAC,CAAC3B,MAAM,EAAE2B,CAAC,CAAC1B,IAAI,EAAE0B,CAAC,CAACE,UAAU,EAAEF,CAAC,CAACxB,MAAM,EAAEwB,CAAC,CAACG,IAAI,EAAEH,CAAC,CAACtB,WAAW,EAAEsB,CAAC,CAACrB,WAAW,EAAEqB,CAAC,CAACpB,aAAa,EAAEoB,CAAC,CAACnB,eAAe,CAAC;MAC5JI,OAAO,CAACmB,IAAI,CAACH,SAAS,CAAC;IAC3B,CAAC,CAAC;IAEF,OAAOhB,OAAO;EAClB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}