{"ast":null,"code":"import _defineProperty from \"/Users/conor/Development/Vue Projects/FormulaStat/formula-stat/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default class Driver {\n  constructor(position, points, wins, id, number, url, dob, lastName, nationality) {\n    _defineProperty(this, \"position\", void 0);\n    _defineProperty(this, \"points\", void 0);\n    _defineProperty(this, \"wins\", void 0);\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"number\", void 0);\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"dob\", void 0);\n    _defineProperty(this, \"lastName\", void 0);\n    _defineProperty(this, \"nationality\", void 0);\n    _defineProperty(this, \"constructors\", []);\n    this.position = position;\n    this.points = points;\n    this.wins = wins;\n    this.id = id;\n    this.number = number;\n    this.url = url;\n    this.dob = dob;\n    this.lastName = lastName;\n    this.nationality = nationality;\n  }\n  static retrieveDrivers(year, round) {\n    var drivers = [];\n    var xmlHttp = new XMLHttpRequest();\n    console.log(\"http://localhost:3333/standings\" + year.toString() + \"-\" + round.toString());\n    xmlHttp.open(\"GET\", \"http://localhost:3333/standings\" + year.toString() + \"-\" + round.toString(), false); // false for synchronous request\n    xmlHttp.send(null);\n    const obj = JSON.parse(xmlHttp.responseText);\n    obj.forEach(e => {\n      const newDriver = new Driver(e.PositionText, e.Points, e.Wins, e.Driver.DriverId, e.Driver.PermanentNumber, e.Driver.Url, e.Driver.DataOfBirth, e.Driver.FamilyName, e.Driver.Nationality);\n      e.Constructors.forEach(constructor => {\n        newDriver.constructors.push(constructor);\n      });\n      drivers.push(newDriver);\n    });\n    return drivers;\n  }\n}","map":{"version":3,"names":["Driver","constructor","position","points","wins","id","number","url","dob","lastName","nationality","retrieveDrivers","year","round","drivers","xmlHttp","XMLHttpRequest","console","log","toString","open","send","obj","JSON","parse","responseText","forEach","e","newDriver","PositionText","Points","Wins","DriverId","PermanentNumber","Url","DataOfBirth","FamilyName","Nationality","Constructors","constructors","push"],"sources":["/Users/conor/Development/Vue Projects/FormulaStat/formula-stat/src/js/Driver.js"],"sourcesContent":["export default class Driver {\n\n    position;\n    points;\n    wins;\n    id;\n    number;\n    url;\n    dob;\n    lastName;\n    nationality;\n    constructors = [];\n\n    constructor(position, points, wins, id, number, url, dob, lastName, nationality) {\n        this.position = position;\n        this.points = points;\n        this.wins = wins;\n        this.id = id;\n        this.number = number;\n        this.url = url;\n        this.dob = dob;\n        this.lastName = lastName;\n        this.nationality = nationality;\n    }\n\n\n    static retrieveDrivers(year, round) {\n\n        var drivers = [];\n\n        var xmlHttp = new XMLHttpRequest();\n        console.log(\"http://localhost:3333/standings\" + year.toString() + \"-\" + round.toString())\n        xmlHttp.open( \"GET\", \"http://localhost:3333/standings\" + year.toString() + \"-\" + round.toString(), false ); // false for synchronous request\n        xmlHttp.send( null );\n\n        const obj = JSON.parse(xmlHttp.responseText);\n        \n        obj.forEach(e => {\n            const newDriver = new Driver(e.PositionText, e.Points, e.Wins, e.Driver.DriverId, e.Driver.PermanentNumber, e.Driver.Url, e.Driver.DataOfBirth, e.Driver.FamilyName, e.Driver.Nationality)\n            \n            e.Constructors.forEach(constructor => {\n                newDriver.constructors.push(constructor);\n            });\n    \n            drivers.push(newDriver);\n        });\n\n        return drivers;\n    }\n}"],"mappings":";;AAAA,eAAe,MAAMA,MAAM,CAAC;EAaxBC,WAAW,CAACC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,WAAW,EAAE;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA,sCAFlE,EAAE;IAGb,IAAI,CAACR,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,WAAW,GAAGA,WAAW;EAClC;EAGA,OAAOC,eAAe,CAACC,IAAI,EAAEC,KAAK,EAAE;IAEhC,IAAIC,OAAO,GAAG,EAAE;IAEhB,IAAIC,OAAO,GAAG,IAAIC,cAAc,EAAE;IAClCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGN,IAAI,CAACO,QAAQ,EAAE,GAAG,GAAG,GAAGN,KAAK,CAACM,QAAQ,EAAE,CAAC;IACzFJ,OAAO,CAACK,IAAI,CAAE,KAAK,EAAE,iCAAiC,GAAGR,IAAI,CAACO,QAAQ,EAAE,GAAG,GAAG,GAAGN,KAAK,CAACM,QAAQ,EAAE,EAAE,KAAK,CAAE,CAAC,CAAC;IAC5GJ,OAAO,CAACM,IAAI,CAAE,IAAI,CAAE;IAEpB,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACT,OAAO,CAACU,YAAY,CAAC;IAE5CH,GAAG,CAACI,OAAO,CAACC,CAAC,IAAI;MACb,MAAMC,SAAS,GAAG,IAAI5B,MAAM,CAAC2B,CAAC,CAACE,YAAY,EAAEF,CAAC,CAACG,MAAM,EAAEH,CAAC,CAACI,IAAI,EAAEJ,CAAC,CAAC3B,MAAM,CAACgC,QAAQ,EAAEL,CAAC,CAAC3B,MAAM,CAACiC,eAAe,EAAEN,CAAC,CAAC3B,MAAM,CAACkC,GAAG,EAAEP,CAAC,CAAC3B,MAAM,CAACmC,WAAW,EAAER,CAAC,CAAC3B,MAAM,CAACoC,UAAU,EAAET,CAAC,CAAC3B,MAAM,CAACqC,WAAW,CAAC;MAE1LV,CAAC,CAACW,YAAY,CAACZ,OAAO,CAACzB,WAAW,IAAI;QAClC2B,SAAS,CAACW,YAAY,CAACC,IAAI,CAACvC,WAAW,CAAC;MAC5C,CAAC,CAAC;MAEFa,OAAO,CAAC0B,IAAI,CAACZ,SAAS,CAAC;IAC3B,CAAC,CAAC;IAEF,OAAOd,OAAO;EAClB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}